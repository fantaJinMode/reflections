How did viewing a diff between two versions of a file help you see the bug that
was introduced?

I dont have to look after all lines of code.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Anyone can know which files has been changed. Another person can easily work on those code and makes easy finding bug.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pros : only file commited when i want.
Cons : sometime files can be lost if not saved for long time.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Because we are saving code which will have multiple files obviously.

How can you use the commands git log and git diff to view the history of files?

git log
git diff -u old_filename new_filename

How might using version control make you more confident to make changes that
could break something?

I can easily reset my code to working code or branch thats working. I can easily find which file is changed and breaking code.

Now that you have your workspace set up, what do you want to try using Git for?

Version control for my code.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

i can track the changes from which i can easily find whats going on code currently and what are changes made currently.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
It would be tedious job to save all files seperately.

How can you use the commands git log and git diff to view the history of files?

git log 
git diff commit_id_new commit_id_old

